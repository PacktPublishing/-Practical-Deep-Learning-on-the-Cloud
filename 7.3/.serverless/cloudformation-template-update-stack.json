{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "MapperLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/DeepLearningInferenceProject-dev-mapper"
      }
    },
    "InferenceDasholdLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/DeepLearningInferenceProject-dev-inference-old"
      }
    },
    "InferenceDashnewLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/DeepLearningInferenceProject-dev-inference-new"
      }
    },
    "PublisherLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/DeepLearningInferenceProject-dev-publisher"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "dev",
                  "DeepLearningInferenceProject",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/DeepLearningInferenceProject-dev-mapper:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/DeepLearningInferenceProject-dev-inference-old:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/DeepLearningInferenceProject-dev-inference-new:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/DeepLearningInferenceProject-dev-publisher:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/DeepLearningInferenceProject-dev-mapper:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/DeepLearningInferenceProject-dev-inference-old:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/DeepLearningInferenceProject-dev-inference-new:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/DeepLearningInferenceProject-dev-publisher:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:ListBucket"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:s3:::${S3BucketName}"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:s3:::${S3BucketName}/*"
                  }
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "DeepLearningInferenceProject",
              "dev",
              "us-east-1",
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "MapperLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/DeepLearningInferenceProject/dev/1583134613116-2020-03-02T07:36:53.116Z/DeepLearningInferenceProject.zip"
        },
        "FunctionName": "DeepLearningInferenceProject-dev-mapper",
        "Handler": "index.handlerMapper",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Timeout": 10
      },
      "DependsOn": [
        "MapperLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "MapperLambdaVersionWcuZnLgrqyfV7QTgxcLx0FRXnKw8mZNtd5yznPFpZo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "MapperLambdaFunction"
        },
        "CodeSha256": "GVga0xfid4UWcbODqEk7AZtBjrjeQ757MnjbMv93y3w="
      }
    },
    "InferenceDasholdLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/DeepLearningInferenceProject/dev/1583134613116-2020-03-02T07:36:53.116Z/inference-old.zip"
        },
        "FunctionName": "DeepLearningInferenceProject-dev-inference-old",
        "Handler": "index.handlerInferenceOld",
        "MemorySize": 3008,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Timeout": 30
      },
      "DependsOn": [
        "InferenceDasholdLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "InferenceDasholdLambdaVersionAyvTQKL9a9rP0UW9qd4kpkEcmL9Tb9wostHRR7n4n9o": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "InferenceDasholdLambdaFunction"
        },
        "CodeSha256": "TF+RxajCGLYSYsVCbIOi8WS+Dr3NAyLGa1+YuTJ120c="
      }
    },
    "InferenceDashnewLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/DeepLearningInferenceProject/dev/1583134613116-2020-03-02T07:36:53.116Z/inference-new.zip"
        },
        "FunctionName": "DeepLearningInferenceProject-dev-inference-new",
        "Handler": "index.handlerInferenceNew",
        "MemorySize": 3008,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Timeout": 30
      },
      "DependsOn": [
        "InferenceDashnewLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "InferenceDashnewLambdaVersione9SEVnt1RiTOrlr78GNua7mSkwF0s067jOYsqzCz5Q": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "InferenceDashnewLambdaFunction"
        },
        "CodeSha256": "gGaTGVu8dSOuXIc7xJJ8zWw/5OVyDZGSL3xb1aDp1/k="
      }
    },
    "PublisherLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/DeepLearningInferenceProject/dev/1583134613116-2020-03-02T07:36:53.116Z/DeepLearningInferenceProject.zip"
        },
        "FunctionName": "DeepLearningInferenceProject-dev-publisher",
        "Handler": "index.handlerPublisher",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Timeout": 10
      },
      "DependsOn": [
        "PublisherLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "PublisherLambdaVersioniAI7DO1PQJ79KOOrSVjcco7TsnGvFEzAfA9pEUBZ2Bs": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PublisherLambdaFunction"
        },
        "CodeSha256": "GVga0xfid4UWcbODqEk7AZtBjrjeQ757MnjbMv93y3w="
      }
    },
    "DeepLearningInferenceProjectDashStepFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "dev-us-east-1-DeepLearningInferenceProject-statemachine",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "MapperLambdaFunction",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "${functionArn}:*",
                        {
                          "functionArn": {
                            "Fn::GetAtt": [
                              "MapperLambdaFunction",
                              "Arn"
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "InferenceDasholdLambdaFunction",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "${functionArn}:*",
                        {
                          "functionArn": {
                            "Fn::GetAtt": [
                              "InferenceDasholdLambdaFunction",
                              "Arn"
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "InferenceDashnewLambdaFunction",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "${functionArn}:*",
                        {
                          "functionArn": {
                            "Fn::GetAtt": [
                              "InferenceDashnewLambdaFunction",
                              "Arn"
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "PublisherLambdaFunction",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "${functionArn}:*",
                        {
                          "functionArn": {
                            "Fn::GetAtt": [
                              "PublisherLambdaFunction",
                              "Arn"
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "DeepLearningInferenceProjectDashStepFunction": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "DefinitionString": {
          "Fn::Sub": [
            "{\n  \"StartAt\": \"StartStepF\",\n  \"States\": {\n    \"StartStepF\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${clJMZtHdC8}\",\n      \"Next\": \"ParallelStepF\"\n    },\n    \"ParallelStepF\": {\n      \"Type\": \"Parallel\",\n      \"Next\": \"PublishStepF\",\n      \"Branches\": [\n        {\n          \"StartAt\": \"OldModel\",\n          \"States\": {\n            \"OldModel\": {\n              \"Type\": \"Task\",\n              \"Resource\": \"${DMjTiwDZbD}\",\n              \"End\": true\n            }\n          }\n        },\n        {\n          \"StartAt\": \"NewModel\",\n          \"States\": {\n            \"NewModel\": {\n              \"Type\": \"Task\",\n              \"Resource\": \"${yryuEZzCgO}\",\n              \"End\": true\n            }\n          }\n        }\n      ]\n    },\n    \"PublishStepF\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${kj5NrKeFRJ}\",\n      \"End\": true\n    }\n  }\n}",
            {
              "clJMZtHdC8": {
                "Fn::GetAtt": [
                  "MapperLambdaFunction",
                  "Arn"
                ]
              },
              "DMjTiwDZbD": {
                "Fn::GetAtt": [
                  "InferenceDasholdLambdaFunction",
                  "Arn"
                ]
              },
              "yryuEZzCgO": {
                "Fn::GetAtt": [
                  "InferenceDashnewLambdaFunction",
                  "Arn"
                ]
              },
              "kj5NrKeFRJ": {
                "Fn::GetAtt": [
                  "PublisherLambdaFunction",
                  "Arn"
                ]
              }
            }
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "DeepLearningInferenceProjectDashStepFunctionRole",
            "Arn"
          ]
        },
        "StateMachineName": "DeepLearningInferenceProject-StepFunction"
      },
      "DependsOn": [
        "DeepLearningInferenceProjectDashStepFunctionRole"
      ]
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-DeepLearningInferenceProject",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        }
      }
    },
    "ApiGatewayResourceStartfunction": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "startFunction",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodStartfunctionGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "AuthorizationType": "NONE",
        "ApiKeyRequired": false,
        "ResourceId": {
          "Ref": "ApiGatewayResourceStartfunction"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS",
          "Credentials": {
            "Fn::GetAtt": [
              "ApigatewayToStepFunctionsRole",
              "Arn"
            ]
          },
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":states:action/StartExecution"
              ]
            ]
          },
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": {
              "Fn::Sub": [
                "\n#set( $body = $util.escapeJavaScript($input.json('$')).replaceAll(\"\\\\'\", \"'\") )\n{\"input\": \"$body\", \"name\": \"$context.requestId\", \"stateMachineArn\":\"${StateMachineArn}\"}",
                {
                  "StateMachineArn": {
                    "Ref": "DeepLearningInferenceProjectDashStepFunction"
                  }
                }
              ]
            },
            "application/x-www-form-urlencoded": {
              "Fn::Sub": [
                "\n#set( $body = $util.escapeJavaScript($input.json('$')).replaceAll(\"\\\\'\", \"'\") )\n{\"input\": \"$body\", \"name\": \"$context.requestId\", \"stateMachineArn\":\"${StateMachineArn}\"}",
                {
                  "StateMachineArn": {
                    "Ref": "DeepLearningInferenceProjectDashStepFunction"
                  }
                }
              ]
            }
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200,
              "SelectionPattern": 200,
              "ResponseParameters": {},
              "ResponseTemplates": {}
            },
            {
              "StatusCode": 400,
              "SelectionPattern": 400,
              "ResponseParameters": {},
              "ResponseTemplates": {}
            }
          ]
        },
        "MethodResponses": [
          {
            "ResponseParameters": {},
            "ResponseModels": {},
            "StatusCode": 200
          },
          {
            "ResponseParameters": {},
            "ResponseModels": {},
            "StatusCode": 400
          }
        ]
      }
    },
    "ApigatewayToStepFunctionsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "apigatewaytostepfunctions",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "states:StartExecution"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "ApiGatewayDeployment1583134614792": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodStartfunctionGet"
      ]
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "MapperLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "MapperLambdaVersionWcuZnLgrqyfV7QTgxcLx0FRXnKw8mZNtd5yznPFpZo"
      }
    },
    "InferenceDasholdLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "InferenceDasholdLambdaVersionAyvTQKL9a9rP0UW9qd4kpkEcmL9Tb9wostHRR7n4n9o"
      }
    },
    "InferenceDashnewLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "InferenceDashnewLambdaVersione9SEVnt1RiTOrlr78GNua7mSkwF0s067jOYsqzCz5Q"
      }
    },
    "PublisherLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PublisherLambdaVersioniAI7DO1PQJ79KOOrSVjcco7TsnGvFEzAfA9pEUBZ2Bs"
      }
    },
    "DeepLearningInferenceProjectDashStepFunctionArn": {
      "Description": "Current StateMachine Arn",
      "Value": {
        "Ref": "DeepLearningInferenceProjectDashStepFunction"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "S3BucketName": {
      "Type": "String",
      "Default": "course-pdl-inference",
      "Description": "S3 bucket which we will use to store images"
    }
  }
}