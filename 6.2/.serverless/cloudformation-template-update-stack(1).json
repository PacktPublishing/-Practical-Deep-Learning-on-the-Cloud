{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "BranchLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/StepFunctionBatch-dev-branch"
      }
    },
    "MapLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/StepFunctionBatch-dev-map"
      }
    },
    "ReduceLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/StepFunctionBatch-dev-reduce"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "dev",
                  "StepFunctionBatch",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/StepFunctionBatch-dev-branch:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/StepFunctionBatch-dev-map:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/StepFunctionBatch-dev-reduce:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/StepFunctionBatch-dev-branch:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/StepFunctionBatch-dev-map:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/StepFunctionBatch-dev-reduce:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "StepFunctionBatch",
              "dev",
              "us-east-1",
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "BranchLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/StepFunctionBatch/dev/1580968125504-2020-02-06T05:48:45.504Z/StepFunctionBatch.zip"
        },
        "FunctionName": "StepFunctionBatch-dev-branch",
        "Handler": "index.handlerBranch",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "python3.6",
        "Timeout": 10
      },
      "DependsOn": [
        "BranchLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "BranchLambdaVersionsZFMjz9zB7pscudqF9KYCYJGoUpX6W8dR7CTL9WI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "BranchLambdaFunction"
        },
        "CodeSha256": "fXJnvUYBhyBvajTlCbiPioliVT5jzE/rnjM3e+bpqpo="
      }
    },
    "MapLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/StepFunctionBatch/dev/1580968125504-2020-02-06T05:48:45.504Z/StepFunctionBatch.zip"
        },
        "FunctionName": "StepFunctionBatch-dev-map",
        "Handler": "index.handlerMap",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "python3.6",
        "Timeout": 10
      },
      "DependsOn": [
        "MapLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "MapLambdaVersionsh5kZt891C5MTV3J0OGl6N35EyF6yluHaxUzamtQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "MapLambdaFunction"
        },
        "CodeSha256": "fXJnvUYBhyBvajTlCbiPioliVT5jzE/rnjM3e+bpqpo="
      }
    },
    "ReduceLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/StepFunctionBatch/dev/1580968125504-2020-02-06T05:48:45.504Z/StepFunctionBatch.zip"
        },
        "FunctionName": "StepFunctionBatch-dev-reduce",
        "Handler": "index.handlerReduce",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "python3.6",
        "Timeout": 10
      },
      "DependsOn": [
        "ReduceLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "ReduceLambdaVersionoOTWjxZo49o9VMc2SrmHWuHpMw1MJNnFBOcUb7FyTU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ReduceLambdaFunction"
        },
        "CodeSha256": "fXJnvUYBhyBvajTlCbiPioliVT5jzE/rnjM3e+bpqpo="
      }
    },
    "StepFunctionBatchDashStepFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "dev-us-east-1-StepFunctionBatch-statemachine",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:StepFunctionBatch-dev-map"
                    },
                    {
                      "Fn::Sub": [
                        "${functionArn}:*",
                        {
                          "functionArn": {
                            "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:StepFunctionBatch-dev-map"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:StepFunctionBatch-dev-branch"
                    },
                    {
                      "Fn::Sub": [
                        "${functionArn}:*",
                        {
                          "functionArn": {
                            "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:StepFunctionBatch-dev-branch"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:StepFunctionBatch-dev-reduce"
                    },
                    {
                      "Fn::Sub": [
                        "${functionArn}:*",
                        {
                          "functionArn": {
                            "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:StepFunctionBatch-dev-reduce"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "batch:SubmitJob",
                    "batch:DescribeJobs",
                    "batch:TerminateJob"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "events:PutTargets",
                    "events:PutRule",
                    "events:DescribeRule"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn:aws:events",
                          {
                            "Ref": "AWS::Region"
                          },
                          {
                            "Ref": "AWS::AccountId"
                          },
                          "rule/StepFunctionsGetEventsForBatchJobsRule"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "StepFunctionBatchDashStepFunction": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "DefinitionString": {
          "Fn::Sub": "{\n  \"StartAt\": \"StartStepF\",\n  \"States\": {\n    \"StartStepF\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:StepFunctionBatch-dev-map\",\n      \"Next\": \"BatchStep\"\n    },\n    \"BatchStep\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:states:::batch:submitJob.sync\",\n      \"Parameters\": {\n        \"JobName\": \"TestStep\",\n        \"JobDefinition\": \"${JobDefinition}\",\n        \"JobQueue\": \"${JobQueue}\",\n        \"ContainerOverrides\": {\n          \"Command\": [\n            \"/app/exec\"\n          ]\n        }\n      },\n      \"Next\": \"Parallel\"\n    },\n    \"Parallel\": {\n      \"Type\": \"Parallel\",\n      \"Next\": \"EndStepF\",\n      \"Branches\": [\n        {\n          \"StartAt\": \"Branch1\",\n          \"States\": {\n            \"Branch1\": {\n              \"Type\": \"Task\",\n              \"Resource\": \"arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:StepFunctionBatch-dev-branch\",\n              \"End\": true\n            }\n          }\n        },\n        {\n          \"StartAt\": \"Branch2\",\n          \"States\": {\n            \"Branch2\": {\n              \"Type\": \"Task\",\n              \"Resource\": \"arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:StepFunctionBatch-dev-branch\",\n              \"End\": true\n            }\n          }\n        }\n      ]\n    },\n    \"EndStepF\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:StepFunctionBatch-dev-reduce\",\n      \"End\": true\n    }\n  }\n}"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "StepFunctionBatchDashStepFunctionRole",
            "Arn"
          ]
        },
        "StateMachineName": "StepFunctionBatch-StepFunction"
      },
      "DependsOn": [
        "StepFunctionBatchDashStepFunctionRole"
      ]
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-StepFunctionBatch",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        }
      }
    },
    "ApiGatewayResourceStartfunction": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "startFunction",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodStartfunctionGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "AuthorizationType": "NONE",
        "ApiKeyRequired": false,
        "ResourceId": {
          "Ref": "ApiGatewayResourceStartfunction"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS",
          "Credentials": {
            "Fn::GetAtt": [
              "ApigatewayToStepFunctionsRole",
              "Arn"
            ]
          },
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":states:action/StartExecution"
              ]
            ]
          },
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": {
              "Fn::Sub": [
                "\n#set( $body = $util.escapeJavaScript($input.json('$')).replaceAll(\"\\\\'\", \"'\") )\n{\"input\": \"$body\", \"name\": \"$context.requestId\", \"stateMachineArn\":\"${StateMachineArn}\"}",
                {
                  "StateMachineArn": {
                    "Ref": "StepFunctionBatchDashStepFunction"
                  }
                }
              ]
            },
            "application/x-www-form-urlencoded": {
              "Fn::Sub": [
                "\n#set( $body = $util.escapeJavaScript($input.json('$')).replaceAll(\"\\\\'\", \"'\") )\n{\"input\": \"$body\", \"name\": \"$context.requestId\", \"stateMachineArn\":\"${StateMachineArn}\"}",
                {
                  "StateMachineArn": {
                    "Ref": "StepFunctionBatchDashStepFunction"
                  }
                }
              ]
            }
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200,
              "SelectionPattern": 200,
              "ResponseParameters": {},
              "ResponseTemplates": {}
            },
            {
              "StatusCode": 400,
              "SelectionPattern": 400,
              "ResponseParameters": {},
              "ResponseTemplates": {}
            }
          ]
        },
        "MethodResponses": [
          {
            "ResponseParameters": {},
            "ResponseModels": {},
            "StatusCode": 200
          },
          {
            "ResponseParameters": {},
            "ResponseModels": {},
            "StatusCode": 400
          }
        ]
      }
    },
    "ApigatewayToStepFunctionsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "apigatewaytostepfunctions",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "states:StartExecution"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "ApiGatewayDeployment1580968125530": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodStartfunctionGet"
      ]
    },
    "ComputeEnvironment": {
      "Type": "AWS::Batch::ComputeEnvironment",
      "Properties": {
        "Type": "MANAGED",
        "ServiceRole": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/service-role/AWSBatchServiceRole"
        },
        "ComputeEnvironmentName": {
          "Fn::Sub": "${AWS::StackName}-ComputeEnvironment"
        },
        "ComputeResources": {
          "MaxvCpus": 40,
          "MinvCpus": 0,
          "DesiredvCpus": 0,
          "Type": "EC2",
          "BidPercentage": 100,
          "InstanceTypes": [
            "p2.xlarge"
          ],
          "SpotIamFleetRole": {
            "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/aws-ec2-spot-fleet-tagging-role"
          },
          "SecurityGroupIds": [
            {
              "Ref": "BatchSecurityGroup"
            }
          ],
          "Subnets": [
            {
              "Ref": "PublicSubnet1"
            }
          ],
          "InstanceRole": "ecsInstanceRole",
          "Tags": {
            "Name": {
              "Fn::Sub": "Batch Instance - ${AWS::StackName}"
            }
          }
        },
        "State": "ENABLED"
      }
    },
    "JobQueue": {
      "Type": "AWS::Batch::JobQueue",
      "Properties": {
        "ComputeEnvironmentOrder": [
          {
            "Order": 1,
            "ComputeEnvironment": {
              "Ref": "ComputeEnvironment"
            }
          }
        ],
        "State": "ENABLED",
        "Priority": 1,
        "JobQueueName": {
          "Fn::Sub": "${AWS::StackName}-JobQueue"
        }
      }
    },
    "JobDefinition": {
      "Type": "AWS::Batch::JobDefinition",
      "Properties": {
        "Type": "Container",
        "ContainerProperties": {
          "Command": [
            "ls"
          ],
          "Memory": 60000,
          "Vcpus": 4,
          "Image": {
            "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ImageUrl}"
          },
          "ResourceRequirements": [
            {
              "Type": "GPU",
              "Value": 1
            }
          ]
        },
        "JobDefinitionName": {
          "Fn::Sub": "${AWS::StackName}-JobDefinition"
        },
        "RetryStrategy": {
          "Attempts": 1
        }
      }
    },
    "PubPrivateVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.31.0.0/16",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "_",
                [
                  {
                    "Ref": "AWS::StackName"
                  }
                ]
              ]
            }
          }
        ]
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "PubPrivateVPC"
        },
        "AvailabilityZone": {
          "Fn::Sub": "${AWS::Region}a"
        },
        "CidrBlock": "172.31.48.0/20",
        "MapPublicIpOnLaunch": true
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "_",
                [
                  {
                    "Ref": "AWS::StackName"
                  }
                ]
              ]
            }
          },
          {
            "Key": "Network",
            "Value": "Public"
          }
        ]
      }
    },
    "GatewayToInternet": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "PubPrivateVPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "PubPrivateVPC"
        },
        "Tags": [
          {
            "Key": "Network",
            "Value": "Public"
          }
        ]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "GatewayToInternet",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "BatchSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow 22 port",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": 22,
            "ToPort": 22
          }
        ],
        "VpcId": {
          "Ref": "PubPrivateVPC"
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "BranchLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "BranchLambdaVersionsZFMjz9zB7pscudqF9KYCYJGoUpX6W8dR7CTL9WI"
      }
    },
    "MapLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "MapLambdaVersionsh5kZt891C5MTV3J0OGl6N35EyF6yluHaxUzamtQ"
      }
    },
    "ReduceLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ReduceLambdaVersionoOTWjxZo49o9VMc2SrmHWuHpMw1MJNnFBOcUb7FyTU"
      }
    },
    "StepFunctionBatchDashStepFunctionArn": {
      "Description": "Current StateMachine Arn",
      "Value": {
        "Ref": "StepFunctionBatchDashStepFunction"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "ImageUrl": {
      "Type": "String",
      "Default": "stepfunctiondeepbatch:tensorflow",
      "Description": "The url of a docker image that contains the application process that will handle the traffic for this service"
    }
  }
}